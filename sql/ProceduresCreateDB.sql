CREATE OR REPLACE PROCEDURE DropKnownTerm
IS    
BEGIN    
    EXECUTE IMMEDIATE 'DROP TABLE KnownTerm';
EXCEPTION
    WHEN OTHERS THEN
        NULL;  
END;    
/
CREATE OR REPLACE PROCEDURE DropIndexedDocument
IS    
BEGIN    
    EXECUTE IMMEDIATE 'DROP TABLE IndexedDocument';
EXCEPTION
    WHEN OTHERS THEN
        NULL;  
END; 
/
CREATE OR REPLACE PROCEDURE DropDocument
IS    
BEGIN    
    EXECUTE IMMEDIATE 'DROP TABLE Document';
EXCEPTION
    WHEN OTHERS THEN
        NULL;  
END; 
/
CREATE OR REPLACE PROCEDURE DropDocument
IS    
BEGIN    
    EXECUTE IMMEDIATE 'DROP TABLE Document';
EXCEPTION
    WHEN OTHERS THEN
        NULL;  
END;
/
CREATE OR REPLACE PROCEDURE DropDocument
IS    
BEGIN    
    EXECUTE IMMEDIATE 'DROP TABLE Document';
EXCEPTION
    WHEN OTHERS THEN
        NULL;  
END;
/
CREATE OR REPLACE PROCEDURE DropMatrix
IS    
    status  NUMBER := 0;
BEGIN    
    status := DBMS_SODA.drop_collection('Matrix');
EXCEPTION
    WHEN OTHERS THEN
        NULL;  
END;
/
CREATE OR REPLACE PROCEDURE CreateDocument
IS    
BEGIN    
    EXECUTE IMMEDIATE 'CREATE TABLE Document(
    doc_id NUMBER GENERATED BY DEFAULT AS IDENTITY,
    title CLOB NOT NULL,
    abstract CLOB NOT NULL,
    authors CLOB NOT NULL,
    keywords CLOB NOT NULL,
    PRIMARY KEY(doc_id)
    )';
EXCEPTION
    WHEN OTHERS THEN
        NULL;  
END;
/
CREATE OR REPLACE PROCEDURE CreateKnownTerm
IS    
BEGIN    
    EXECUTE IMMEDIATE 'CREATE TABLE KnownTerm(
    term VARCHAR2(4000) NOT NULL,
    PRIMARY KEY(term)
    )';
EXCEPTION
    WHEN OTHERS THEN
        NULL;  
END;
/
CREATE OR REPLACE PROCEDURE CreateIndexedDocument
IS    
BEGIN    
    EXECUTE IMMEDIATE 'CREATE TABLE IndexedDocument(
    lsi_index VARCHAR2(4000) NOT NULL,
    doc_id NUMBER NOT NULL,
    PRIMARY KEY(lsi_index),
    FOREIGN KEY(doc_id) REFERENCES Document(doc_id)
    )';
EXCEPTION
    WHEN OTHERS THEN
        NULL;  
END;
/
CREATE OR REPLACE PROCEDURE CreateMatrix
IS    
    collection SODA_Collection_T;
BEGIN    
    collection := DBMS_SODA.create_collection('Matrix');
EXCEPTION
    WHEN OTHERS THEN
        NULL;  
END;
/
CREATE OR REPLACE PROCEDURE CreateTables
IS    
BEGIN 
    DropKnownTerm;
    DropIndexedDocument;
    DropDocument;
    DropDocument;
    DropDocument;
    DropMatrix;
    CreateDocument;
    CreateKnownTerm;
    CreateIndexedDocument;
    CreateMatrix;
EXCEPTION
    WHEN OTHERS THEN
        NULL;  
END;